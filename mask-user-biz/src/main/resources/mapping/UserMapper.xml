<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mask.mask.users.dao.UserDao">
    <insert id="addUser">
        INSERT INTO user (id, username, password, gender, birthday, last_login_time, last_login_ip,
                user_level, nickname, mobile, avatar, weixin_openid, session_key, status,
                add_time, update_time, deleted)
        VALUES(#{userPo.id,jdbcType=INTEGER},#{userPo.username,jdbcType=VARCHAR}, #{userPo.password,jdbcType=VARCHAR},
                #{userPo.gender,jdbcType=TINYINT},
                #{userPo.birthday,jdbcType=DATE}, #{userPo.lastLoginTime,jdbcType=TIMESTAMP}, #{userPo.lastLoginIp,jdbcType=VARCHAR},
                #{userPo.userLevel,jdbcType=TINYINT}, #{userPo.nickname,jdbcType=VARCHAR}, #{userPo.mobile,jdbcType=VARCHAR},
                #{userPo.avatar,jdbcType=VARCHAR}, #{userPo.weiXinOpenid,jdbcType=VARCHAR}, #{userPo.sessionKey,jdbcType=VARCHAR},
                #{userPo.status,jdbcType=TINYINT}, #{userPo.addTime,jdbcType=TIMESTAMP}, #{userPo.updateTime,jdbcType=TIMESTAMP},
                #{userPo.deleted,jdbcType=BIT})
    </insert>
    <update id="updateLoginMessage">
        UPDATE user
        SET last_login_time = #{user.lastLoginTime}, last_login_ip = #{user.lastLoginIp},
         session_key = #{user.sessionKey}
        WHERE id = #{user.id}
    </update>
    <select id="getUserByUserName" resultType="cn.mask.mask.model.user.po.UserPO">
        SELECT id, username, password, gender, birthday, last_login_time, last_login_ip,
                user_level, nickname, mobile, avatar, weixin_openid, session_key, status,
                add_time, update_time, deleted
        FROM user
        WHERE nickname = #{userName}
    </select>
    <select id="getUserByOpenId" resultType="cn.mask.mask.model.user.po.UserPO">
        SELECT id, username, password, gender, birthday, last_login_time, last_login_ip,
                user_level, nickname, mobile, avatar, weixin_openid, session_key, status,
                add_time, update_time, deleted
        FROM user
        WHERE weixin_openid = #{openId}
    </select>
    <select id="getUserInfoByPhone" resultType="cn.mask.mask.model.user.dto.UserInfo">
        SELECT id, username, password, gender, birthday, last_login_time, last_login_ip,
                user_level, nickname, mobile, avatar, weixin_openid, session_key, status,
                add_time, update_time, deleted
        FROM user
        WHERE weixin_openid = #{openId}
    </select>
    <select id="getUserInfoById" resultType="cn.mask.mask.model.user.dto.UserInfo">
        SELECT id, username, password, gender, birthday, last_login_time, last_login_ip,
                user_level, nickname, mobile, avatar, weixin_openid, session_key, status,
                add_time, update_time, deleted
        FROM user
        WHERE id = #{id}
    </select>
    <select id="checkPhoneExist" resultType="java.lang.Integer">
        SELECT count(1) FROM user WHERE phone = #{phone}
    </select>
</mapper>